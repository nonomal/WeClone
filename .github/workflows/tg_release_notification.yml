name: Telegram Release Notification

on:
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Install telegramify-markdown
        run: |
          npm init -y
          npm install telegramify-markdown
          
      - name: Convert release body to Telegram format
        id: convert-markdown
        run: |
          # ÂÖàÂ∞Ürelease body‰øùÂ≠òÂà∞Êñá‰ª∂
          cat > release_body.txt << 'RELEASE_BODY_EOF'
          ${{ github.event.release.body }}
          RELEASE_BODY_EOF
          
          # ÁÑ∂ÂêéÂàõÂª∫ËΩ¨Êç¢ËÑöÊú¨
          cat > convert-release.js << 'EOF'
          const telegramifyMarkdown = require('telegramify-markdown');
          const fs = require('fs');

          // ‰ªéÊñá‰ª∂ËØªÂèñrelease bodyÂÜÖÂÆπÔºàÈÅøÂÖçshellËß£ÊûêÈóÆÈ¢òÔºâ
          let releaseBody = '';
          try {
            releaseBody = fs.readFileSync('release_body.txt', 'utf8');
          } catch (error) {
            console.error('ËØªÂèñrelease bodyÂ§±Ë¥•:', error);
            releaseBody = process.env.RELEASE_BODY || '';
          }
          
          console.log('=== ÂéüÂßãrelease body ===');
          console.log(releaseBody);

          // ËΩ¨Êç¢‰∏∫TelegramÊ†ºÂºè
          const telegramBody = telegramifyMarkdown(releaseBody);
          
          // ÊûÑÂª∫ÂÆåÊï¥ÁöÑÊ∂àÊÅØ
          const tagName = process.env.TAG_NAME || '';
          const releaseUrl = process.env.RELEASE_URL || '';
          
          const fullMessage = `üöÄ *WeClone New Version Released*
          üè∑Ô∏è *Version*: \`${tagName}\`
          üîó *Link*: [Github Release](${releaseUrl})
          üìã *Release Notes*:
          ${telegramBody}`;
          
          // ËæìÂá∫Âà∞GitHub Actions
          console.log('ËΩ¨Êç¢ÂêéÁöÑÊ∂àÊÅØ:');
          console.log(fullMessage);
          
          // Â∞ÜÊ∂àÊÅØ‰øùÂ≠òÂà∞ÁéØÂ¢ÉÂèòÈáè
          fs.writeFileSync('telegram_message.txt', fullMessage);
          EOF
          
          # ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè
          export RELEASE_BODY="${{ github.event.release.body }}"
          export TAG_NAME="${{ github.event.release.tag_name }}"
          export RELEASE_URL="${{ github.event.release.html_url }}"
          export REPO_NAME="${{ github.repository }}"
          
          # ËøêË°åËΩ¨Êç¢ËÑöÊú¨
          node convert-release.js
          
          # ËØªÂèñËΩ¨Êç¢ÂêéÁöÑÊ∂àÊÅØÂπ∂ËÆæÁΩÆ‰∏∫ËæìÂá∫
          echo "TELEGRAM_MESSAGE<<EOF" >> $GITHUB_OUTPUT
          cat telegram_message.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      # - name: Display converted message
      #   run: |
      #     echo "=== ËΩ¨Êç¢ÂêéÁöÑTelegramÊ∂àÊÅØ ==="
      #     echo "${{ steps.convert-markdown.outputs.TELEGRAM_MESSAGE }}"
          
      - name: Send Telegram Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: ${{ steps.convert-markdown.outputs.TELEGRAM_MESSAGE }}
          format: markdown
          disable_web_page_preview: false
        
